Data Engineering
------------------
To design,build and maintain 

build (ETL/ELT)
data architecture (data lakes,warehouses,mart)
availability
integration data from various source (web,db,file,API,cloud etc.,)
Optimize performance of data
 |
[Result]

Data Science 
--------------
[Data analysis ] --->[Machine Learning - model]
 -------------			|--------------->Deeplearning  ->GenAI ->LLM
 results 								  |-->RAG
  ->EDA									
 statistical modeling 
 Hypothesis testing
 |
 Visualization  
 |
 cleaned --------------------->model //apply ML
						  

[Deployed] 
 |
 Continuous Monitoring
 ----------------------
  |->Monitoring 
      |->Infrastructure 
      |
      |->Application 	
	 -------------
				
  |-> TSDB, Visualization
	
==========================================================================================================

RAG - llm
-----------
Data ->split ->embedding -> vectorDB ->retrive ->prompt ->llm ->(UI) 
						
streamlit (UI)
-----------------------------------------------------------------------

Python programming
- DE and DS 
|
Pandas - DataFrame
Matplotlib - Visualization
|
statistics model
EDA
-----

Python Programming
-------------------
 |->General purpose programming
 
 |-> 1. procedure style code - direct approach style
 |-> 2. object oriented style code - object based access 
 |-> 3. functional style code - expression (or) inline (or) singleline code style # computing 
------------------------------------------------------------------------

https://www.python.org
--------------------------
 |
download -> python  => cpython  -> GIL is enabled //locking mechanism 
				   --------------
				   
In python everything is an object 
	  -----------	   -------//class<-->object  
	  all the values 

each python value(object) - own address(state)

 a = 10
 b = 4+6
 c = 3+7
 
 print(a)
 print(b)
 print(c)

 Other programming (in C)			Vs 	in python
 ---------------------------				------------
  int a = 10;	 a | 10 | 0x1000					10 - 0x1234
  int b = 10;    b | 10 | 0x1004			a=10		11 - 0x4556	
  int c = 10;    c | 10 | 0x1008			b=4+6
							c=3+7
							
							//a b c are mapping to 0x1234 only
							
							a=a+1
							//now a is NOT mapping to 0x1234
							a ---> 0x4556
--------------------------------------------------------------------------------------------------
 va = 10  vb = 10
 va+100   vb+200 
 ...//racecondition - Avoid - lock - default CPython -> GIL is enabled
---------------------------------------------------------------------------------------------------

IPython
GIL - disabled 
---

Data analytics and Machine Learning //modules are available in anaconda python (ipython)
...................................
---------------------------------------------------------------------------------------------------

 |-> 1. procedure style code - direct approach style
 |-> 2. object oriented style code - object based access 
 |-> 3. functional style code - expression (or) inline (or) singleline code style # computing 


 |-> 1. procedure style code - direct approach style
 -------------------------------------------------------
  variable = value

  def f1():
	....
	....
 
 f1()
 print(variable)

 if(variable < value):
	..
 else
	..

 python is dynamic type programming
 ------------------------------------

 variable = value <== initialization

 port = 5050
 app = 'fastApi'
 
 print(port)
 print(app)
-------------------------------------------------------------------------
























